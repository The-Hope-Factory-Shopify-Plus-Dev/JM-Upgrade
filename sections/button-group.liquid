
{% comment %} Is the color set to transparent? {% endcomment %}
{%- assign background_alpha = section.settings.background | color_extract: 'alpha' -%}
{%- assign gradient_alpha = section.settings.gradient | color_extract: 'alpha' -%}

{% comment %} Section specific CSS {% endcomment %}
{% capture section_css -%}
  .section {
    background-image: linear-gradient({{ section.settings.gradient_rotation }}deg, rgba(255,255,255,0), {{ section.settings.gradient }});
    background-color: {%- if background_alpha != 0 -%}{{ section.settings.background }}{%- endif -%};
  }
{%- endcapture -%}
{%- assign title = section.settings.title -%}
{%- assign heading_font = section.settings.heading_font -%}
{%- assign heading_color = section.settings.heading_color -%}
{%- assign heading_alignment = section.settings.heading_alignment -%}
{%- assign heading_size = section.settings.heading_size -%}
{% comment %} Is the color set to transparent? {% endcomment %}
{%- assign heading_alpha = heading_color | color_extract: 'alpha' -%}
{%- assign background_alpha = section.settings.background | color_extract: 'alpha' -%}
{%- assign gradient_alpha = section.settings.gradient | color_extract: 'alpha' -%}
{% style %}
  .section {
    background-image: linear-gradient({{ section.settings.gradient_rotation }}deg, rgba(255,255,255,0), {{ section.settings.gradient }});
    background-color: {%- if background_alpha != 0 -%}{{ section.settings.background }}{%- endif -%};
  }
  #shopify-section-{{ section.id }} {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
    {% if section.settings.width == 'wide' %}
      width: 100%;
    {% elsif section.settings.width == 'half' %}
      width: 50%;
    {% endif %}
  }
  .button-group__heading {
    font-size: {{ heading_size }}px;
    color: {%- if heading_alpha != 0 -%}{{ heading_color }}{%- else -%}{{ settings.heading_color }}{%- endif -%};
    font-weight: {{ heading_font.weight }};
    font-style: {{ heading_font.style }};
  }
  .button-group-wrap {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
  }
  .button-group-wrap .button.button--secondary {
    background-color: transparent;
    color: #000;
  }
  .button-group-wrap .button.button--secondary:link,
  .button-group-wrap .button.button--secondary:active,
  .button-group-wrap .button.button--secondary:visited,
  .button-group-wrap .button.button--secondary:focus {
    background-color: transparent;
    color: #000;
  }
  .button-group-wrap .button.button--secondary:hover {
    background-color: #000;
    color: #fff;
  }
  {% render 'css-loop',
          css: section_css,
          id: section.id
  %}
  {% render 'css-loop',
          css: section.settings.custom_css,
          id: section.id
  %}
{% endstyle %}

{% comment %} HTML markup {% endcomment %}
<section class="section
                {{ section.settings.css_class }}
                is-width-{{ section.settings.width }}
                {% if background_alpha != 0 or gradient_alpha != 0  %}
                  has-background
                {% endif %}
                "
          {% if section.settings.animation != "none" %}
            data-scroll-class="{{ section.settings.animation }}"
          {% endif %}>
  <div class="container
              has-limit
              ">
    <div class="columns one-whole">
      {% if title != blank %}
        <h2 class="button-group__heading title text-align-{{ heading_alignment }} {% if heading_size > 50 %}mobile-shrink-text{% endif %}"><span>{{ title }}</span></h2>
      {% endif %}

      {% if section.blocks.size > 0 %}
        <div class="button-group-wrap">
          {% for block in section.blocks %}
            {% render 'button',
                label: block.settings.button_label,
                href: block.settings.button_link,
                style: section.settings.button_style,
                type: "link"
            %}
          {% endfor %}
        </div>
      {% endif %}
    </div>
  </div>
</section>

{% schema %}
  {
    "name": "Button group",
    "settings": [
      {
        "type": "header",
        "content": "Heading"
      },
      {
        "type": "text",
        "id": "title",
        "label": "Heading",
        "default": "Button group"
      },
      {
        "type": "font_picker",
        "id": "heading_font",
        "label": "Font",
        "default": "open_sans_n4"
      },
      {
        "type": "color",
        "id": "heading_color",
        "label": "Heading",
        "default": "rgba(0,0,0,0)"
      },
      {
        "type": "select",
        "id": "heading_alignment",
        "label": "Text alignment",
        "options": [
          {
            "value": "left",
            "label": "Left"
          },
          {
            "value": "center",
            "label": "Center"
          },
          {
            "value": "justify",
            "label": "Justify"
          },
          {
            "value": "right",
            "label": "Right"
          }
        ],
        "default": "center"
      },
      {
        "type": "range",
        "id": "heading_size",
        "label": "Base size",
        "min": 20,
        "max": 120,
        "default": 30,
        "unit": "px"
      },
      {
        "type": "select",
        "id": "button_style",
        "label": "Style",
        "options": [
          {
            "value": "button--primary",
            "label": "Primary"
          },
          {
            "value": "button--secondary",
            "label": "Secondary"
          },
          {
            "value": "button--link-style",
            "label": "Link style"
          }
        ],
        "default": "button--primary"
      },
      {
        "type": "header",
        "content": "Background"
      },
      {
        "type": "color",
        "id": "background",
        "label": "Background",
        "default": "#EEEEEE"
      },
      {
        "type": "color",
        "id": "gradient",
        "label": "Gradient",
        "default": "#C0C0C0"
      },
      {
        "type": "range",
        "id": "gradient_rotation",
        "label": "Gradient rotation",
        "min": 0,
        "max": 180,
        "step": 10,
        "default": 180,
        "unit": "deg"
      },
      {
        "type": "header",
        "content": "Layout"
      },
      {
        "type": "select",
        "id": "width",
        "label": "Width",
        "default": "wide",
        "options": [
          {
            "value": "half",
            "label": "Half"
          },
          {
            "value": "standard",
            "label": "Standard"
          },
          {
            "value": "wide",
            "label": "Wide"
          }
        ]
      },
      {
        "type": "range",
        "id": "padding_top",
        "label": "Top spacing",
        "min": 0,
        "max": 80,
        "default": 20,
        "unit": "px"
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "label": "Bottom spacing",
        "min": 0,
        "max": 80,
        "default": 0,
        "unit": "px"
      },
      {
        "type": "select",
        "id": "animation",
        "label": "Animation",
        "default": "none",
        "options": [
          {
            "value": "none",
            "label": "None"
          },
          {
            "value": "fadeIn",
            "label": "Fade in"
          },
          {
            "value": "fadeInDown",
            "label": "Fade in down"
          },
          {
            "value": "fadeInLeft",
            "label": "Fade in left"
          },
          {
            "value": "fadeInRight",
            "label": "Fade in right"
          },
          {
            "value": "slideInLeft",
            "label": "Slide in left"
          },
          {
            "value": "slideInRight",
            "label": "Slide in right"
          },
          {
            "value": "zoomIn",
            "label": "Zoom in"
          }
        ]
      },
      {
        "type": "header",
        "content": "Advanced"
      },
      {
        "type": "paragraph",
        "content": "[Learn more](https://help.outofthesandbox.com/hc/en-us/articles/360022329373)"
      },
      {
        "type": "text",
        "id": "css_class",
        "label": "CSS Class"
      },
      {
        "type": "textarea",
        "id": "custom_css",
        "label": "Custom CSS"
      }
    ],
    "blocks": [
      {
        "name": "Button",
        "type": "button",
        "settings": [
          {
            "type": "text",
            "id": "button_label",
            "label": "Button label"
          },
          {
            "type": "url",
            "id": "button_link",
            "label": "Button link"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Button group",
        "category": "Button",
        "settings": {

        }
      }
    ]
  }
{% endschema %}